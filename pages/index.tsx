import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import client from "../graphql/client";
import {
  IPinnedData,
  IPinnedTotalCount,
  IPinnedTotalCountVars,
  IPinnedVars,
  REPO_PINNED_QUERY,
  REPO_PINNED_TOTAL_QUERY,
} from "../graphql/queries/repo.gql";
import styles from "../styles/Home.module.css";

interface IProps {
  pinnedData: IPinnedData;
}

const Home: NextPage<IProps> = ({ pinnedData }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          {pinnedData.user.pinnedItems.edges.map((item) => (
            <a key={item.node.id} href={item.node.url} className={styles.card}>
              <h2>{item.node.name} &rarr;</h2>
              <p>{item.node.description}</p>
            </a>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export async function getServerSideProps() {
  const { data } = await client.query<IPinnedTotalCount, IPinnedTotalCountVars>(
    {
      query: REPO_PINNED_TOTAL_QUERY,
      variables: {
        username: process.env.GITHUB_USERNAME,
      },
    }
  );

  const { data: pinnedData } = await client.query<IPinnedData, IPinnedVars>({
    query: REPO_PINNED_QUERY,
    variables: {
      username: process.env.GITHUB_USERNAME,
      totalCount: data && data.user.pinnedItems.totalCount,
    },
  });

  return {
    props: {
      pinnedData,
    },
  };
}

export default Home;
